<% handle_meme_column_assignment %>

<% @memes.each_with_index do |meme, n| %>

  <div id="meme_<%= meme.id %>" class="meme">
  <% if meme.number_of_columns >= SiteController::MAX_NUMBER_OF_COLUMNS && meme.z_score_strength.ceil >= @memes[0].z_score_strength.ceil-3 && n == 0 %>
    <%= render :partial => "site/partials/meme_16_with_extras_1", :locals => { :meme => meme, :item => @items_by_meme[meme.id].first, :alternate_content => false  } %>
  <% elsif meme.number_of_columns >= SiteController::MAX_NUMBER_OF_COLUMNS && meme.z_score_strength.ceil >= @memes[0].z_score_strength.ceil-3 && @has_displayed_level_2 == false %>
    <%= render :partial => "site/partials/meme_16_with_extras_2", :locals => { :meme => meme, :item => @items_by_meme[meme.id].first, :alternate_content => false  } %>
    <% @has_displayed_level_2 = true %>
  <% else %>  
    <%= render :partial => "site/partials/generic_meme", :locals => { :meme => meme, :item => @items_by_meme[meme.id].first, :alternate_content => false } %>
  <% end %>
  </div>
  
  <% if meme.break_afterwards %>
  <div class="clear"></div>
  <% end %>
    
<% end %>

<div class="clear"></div>

<%= hidden_field_tag "version_loaded", @run.encrypted_id %>

<% if params[:id].nil? %>
<%= periodically_call_remote(:url => { :action => :current }, :success => "should_page_be_updated(request.responseText)", :frequency => '120') %>
<script type="text/javascript">
//<![CDATA[
new PeriodicalExecuter(function(){update_time()}, 60);
//]]>
</script>

<% end %>
